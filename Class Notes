Scenario based, something bad happened...persistence

Powershell Day 1
Powershell profiles
scripts, all users all hosts
ran when powershell opens

#Powershell Commands#

#Show system info	  Get-ComputerInfo
#Show OS version	  Get-CimInstance -ClassName Win32_OperatingSystem
#Show running processes	  Get-Process
#Show services  	Get-Service
#Show installed   hotfixes	Get-HotFix
#List files in directory	Get-ChildItem
#List local users	  Get-LocalUser
#List local groups	  Get-LocalGroup
#Add a user to a group	  Add-LocalGroupMember -Group "Administrators" -Member "username"
#List all cmdlets	  Get-Command
#Search for commands	  Get-Command *service*
#Get help for a command	  Get-Help Get-Service
#Update help files	  Update-Help

#Usernames and corresponding SIDS
Get-LocalUser | Select-Object Name, SID

#Domain
Get-ADUser -Filter * -Property SID | Select-Object Name, SID


Powershell Profiles

Profile Type	Example Use
All Users, All Hosts	Set proxy or environment vars for all users.
All Users, Current Host	Customize ISE settings for everyone.
Current User, All Hosts	Add personal aliases and functions.
Current User, Current Host	Make your console window blue only for you.

#Can check with Get-Content $Profile

#What to Look For (Defensive Side)
Hereâ€™s how to detect abuse:

Check if the profile file exists:

Test-Path $PROFILE
View its contents:

Get-Content $PROFILE
Watch for signs of persistence, such as:

Invoke-WebRequest / iex
Encoded payloads (FromBase64String)
Start-Process, Add-Type, New-Object Net.WebClient
C2 (command and control) references





Windows Registry
Run keys   Run/RunOnce
HKLM and HKU or HKCU


#Powershell
Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" | Select-Object EnableLUA

#CMD
reg query "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v EnableLUA

#View a registry key
#Use Get-Item to look at a registry key (like viewing a folder):
Get-Item "HKLM:\Software\Microsoft\Windows\CurrentVersion"

#List Values Under a Registry Key
Get-ItemProperty "HKLM:\Software\Microsoft\Windows\CurrentVersion"

#Check a Specific Registry Value
(Get-ItemProperty "HKCU:\Control Panel\Desktop").Wallpaper


#Get SID from Service Name or Display Name
Step 1: (Optional) Convert display name to service name
If you only have the display name, convert it first:
- $displayName = "Windows Update"  # Replace with your display name
$serviceName = Get-WmiObject -Class Win32_Service | Where-Object { $_.DisplayName -eq $displayName } | Select-Object -ExpandProperty Name

Step 2: Build the NT SERVICE account name
-$ntAccount = "NT SERVICE\$serviceName"

Step 3: Translate it to a SID
-$sid = (New-Object System.Security.Principal.NTAccount($ntAccount)).Translate([System.Security.Principal.SecurityIdentifier])
$sid.Value



Alternate Data Streams
Obfuscation
Can be used to obfuscate exploit but need someting to run it
Windows:

Dir /R



Linux Essentials
Permissions on files and folders
Something to pay attention to, wanting to change directories but could not due to permissions, no sudo cd but there is sudo ls. File and folder permissions

Find_Evil Persistence
Used htop, saw communcations being sent, looked and saw chant being sent. 
Looked at last comm/bottom of tree to see who was the last to recieve communcation, also saw IP and port number.







Windows Boot Process
Did not dive into BCDedit, don't go down path of topics not discussed in class
Nor DLLInjections
Nor binary analysis

if need to can use strings in Linux and sysinternals on Windows

Linux Boot Process

Run Levels and Run Scripts
Init scripts in 
/etc/init
/etc/inittab 
/etc/rc.S

no looking in /sbin/init


Section 7.2
Bash profiles
/etc/enviornmental profiles
/etc/enviornment
/etc/profile
/etc/bash

Windows Process Validity

Scheduled Tasks
-Services may be running or stopped
-Look at triggering mechanism and what it does
-looking if its a verfied process for what it's expected to be
-name is not important


Services
-find a bad executable, find what started it, or example svchost, trace parent process


Network Connections
Using a suspicious port, repeating numbers, ascending or descending numbers

UAC
-privilege escalation

Linux Process Validity
-Cron Jobs
-Configuration files 
/var/spool/cron   -contains usernames
/etc/cron.d
/etc/crontab

tools to identify parent processes
-htop or pstree

just becasue it's running bash and something else is above it, may not be bad
if it's something that should be on the machine. not bad


Windows Auditing and Logging
Artifacts - things left behind

Need to know env and what should be running

going to be on a DoD/government computer

Should be running from program files or system32

Since we do not have to use sysinternals, we can leave out Browser Artifacts

Linux Auditing and Logging

Memory Analysis

Active Directory
If needed, module but with 2 machines, not going to use Active Directory



